{% extends "base.html.twig" %}

{% block title %}{{ parent() }}{% endblock %}

{% block body %}

    <!-- The style attribute replaces p-3, p-md-5 and m-md-3 classes -->
    <div class="position-relative overflow-hidden text-center bg-light" style="padding-left: 3rem !important; padding-top: 3rem !important; padding-right: 3rem !important; margin-left: 1rem !important; margin-top: 1rem !important; margin-right: 1rem !important;">
      <div class="col-md-5 p-lg-4 mx-auto my-3">
        <h1 class="display-4" style="font-family: Holiday; {% if is_mobile() %}font-size: 2.5rem;{% else %}font-size: 5rem;{% endif %}">{{ app_name }}</h1>
        <p class="lead font-weight-normal" style="margin-top: 2rem;">{{ "subtitle"|trans|nl2br }}</p>
        <p class="lead">
        	<a href="">{{ "ask_questions"|trans }}</a>
        </p>
        <p class="lead">
      	  {% include 'template/share_buttons.html.twig' %}
        </p>
        <a class="btn btn-outline-secondary" href="#map">{{ "show_answers"|trans }}</a>
        {% if form_end is empty or "now"|date("Y-m-d H:i:s") < form_end|date("Y-m-d H:i:s") %}
            <p></p>
            <p class="lead font-weight-normal">{{ "are_you_candidate"|trans }}<br/>
        		<a class="btn btn-outline-secondary" href="{{ url("answer_form") }}">{{ "answer_as_a_list"|trans }}</a>
            </p>
        {% endif %}
      </div>
      <!--<div class="product-device shadow-sm d-none d-md-block"></div>-->
      <!--<div class="product-device product-device-2 shadow-sm d-none d-md-block"></div>-->
	  	<img class="d-none d-md-block" style="position: absolute; top: 0%; right: auto; bottom: 0; width: 30%;" src="{{ absolute_url(asset("bundles/app/picture_1.png")) }}">
    </div>
    
    <div id="map" style="min-height: 80vh"></div>
    
	<div class="px-3 py-3 pt-md-5 pb-md-4 mx-auto">
	
    	<h2>{{ "last_lists"|trans }}</h2>
        {% if lists|length == 0 %}
        	<h5>/</h5>
    	{% else %}
        
        	<center>
        		{% for list in lists %}
        			<h5><a href="{{ url("city", {"insee": list.city.insee, "name": list.city.nameForUrl}) }}">{{ list.city.name }}</a> - <a href="{{ url("list", {"id": list.id, "name": list.nameForUrl}) }}">{{ list.name }}</a></h5>
        		{% endfor %}
    		</center>
        {% endif %}
	</div>
    
    {% if cities|length > 0 %}
    	<div class="px-3 py-3 mx-auto">
    	
        	<h2>{{ "cities"|trans }}</h2>
        	<p><em style="color: #feb24c;">{{ "color_of_city_with_answer"|trans }}</em> {{ "colored_city_legend"|trans }}</p>
    	</div>
    	
    	{% set nbOnEachLine = (cities|length/3)|round(0, 'floor') %}
    	
    	{% set nbLine1 = nbOnEachLine %}
    	{% set nbLine2 = nbOnEachLine %}
    	{% set nbLine3 = nbOnEachLine %}
    	
    	{% set rest = cities|length%3 %}
    	
    	{% if rest == 1 %}
    	    {% set nbLine1 = nbLine1 + 1 %}
	    {% elseif rest == 2 %}
    	    {% set nbLine1 = nbLine1 + 1 %}
    	    {% set nbLine2 = nbLine2 + 1 %}
	    {% endif %}
    		
    	
        <div class="container">
      	  <div class="row">
            <div class="col-6 col-md">
              <ul class="text-small">
              	
        	    {% for i in 0..(nbLine1-1) %}
                	<li>
                		{% if cities[i].validatedLists|length > 0 %}
                			<strong><a href="{{ url("city", {"insee": cities[i].insee, "name": cities[i].nameForUrl}) }}" style="color: #feb24c;">{{ cities[i].name }}</a></strong>
                		{% else %}
                			<a href="{{ url("city", {"insee": cities[i].insee, "name": cities[i].nameForUrl}) }}">{{ cities[i].name }}</a>
                		{% endif %}
                	</li>
                {% endfor %}
              </ul>
            </div>
            
            <div class="col-6 col-md">
              <ul class="text-small">
              	{% if nbLine2 == 0 %}
                	<li></li>
            	{% else %}
            	    {% for i in nbLine1..(nbLine1+nbLine2-1) %}
                    	<li>
                		{% if cities[i].validatedLists|length > 0 %}
                			<strong><a href="{{ url("city", {"insee": cities[i].insee, "name": cities[i].nameForUrl}) }}" style="color: #feb24c;">{{ cities[i].name }}</a></strong>
                		{% else %}
                			<a href="{{ url("city", {"insee": cities[i].insee, "name": cities[i].nameForUrl}) }}">{{ cities[i].name }}</a>
                		{% endif %}
                    	</li>
                    {% endfor %}
                {% endif %}
              </ul>
            </div>
            
            <div class="col-6 col-md">
              <ul class="text-small">
              	{% if nbLine3 == 0 %}
                	<li></li>
            	{% else %}
            	    {% for i in (nbLine1+nbLine2)..(cities|length-1) %}
                    	<li>
                		{% if cities[i].validatedLists|length > 0 %}
                			<strong><a href="{{ url("city", {"insee": cities[i].insee, "name": cities[i].nameForUrl}) }}" style="color: #feb24c;">{{ cities[i].name }}</a></strong>
                		{% else %}
                			<a href="{{ url("city", {"insee": cities[i].insee, "name": cities[i].nameForUrl}) }}">{{ cities[i].name }}</a>
                		{% endif %}
                    	</li>
                    {% endfor %}
                {% endif %}
              </ul>
            </div>	
          </div>
        </div>
    {% endif %}
    
	<div class="px-3 py-3 pt-md-5 pb-md-4 mx-auto">
		<center>
    		<h4 class="font-weight-normal">{{ "explanations"|trans|nl2br }} <a href="{{ url("questions") }}">{{ "here"|trans }}</a>.</h4>
    	</center>
	</div>
        
	
{% endblock %}

{% block js %}
    <script type="application/javascript">


    $(function() {
        var map = L.map('map').setView([{{ map_center }}], {{ map_zoom }});
        
        L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.png?access_token={{ mapbox_access_token }}', {
            maxZoom: 18,
            attribution: 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors, ' +
                '<a href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>, ' +
                'Imagery Â© <a href="http://mapbox.com">Mapbox</a>',
            id: 'mapbox.streets'
        }).addTo(map);

        // Prevent the zoom when we scroll the webpage
        map.scrollWheelZoom.disable();



     	// Control that shows state info on hover
        var info = L.control();

        var legend = L.control({position: 'bottomright'});

        legend.onAdd = function (map) {

            var div = L.DomUtil.create('div', 'info legend'),
            grades = ["#feb24c"],
            legends = ["{{ "color_of_city_with_answer"|trans }}"]
            labels = [" {{ "colored_city_legend"|trans }}"];

            // loop through our density intervals and generate a label with a colored square for each interval
            for (var i = 0; i < grades.length; i++) {
                div.innerHTML +=
                    '<h6 style="padding: 0px;"><em style="color: '+grades[i]+'; background: white; padding-left: 5px; padding-right: 5px;"> '+legends[i]+'</em> '+labels[i]+"</h6>";
        	}

            div.style.color = 'black';
			div.style.padding = '0px 10px 5px 10px';
			div.style.borderRadius = '0.5em';
			div.style.backgroundColor = 'white';

        return div;
        };

        legend.addTo(map);
  	  
    	
    	var district_boundary;
        
        // Set geojson shapes
        $.ajax({
            dataType: "json",
            url: "{{ asset("bundles/app/cities.geojson") }}",
            success: function(data) {
    
                var multipolygon = L.geoJson(data, {
                    style: style, onEachFeature: onEachFeature
                });
    
                district_boundary = multipolygon.addTo(map);
                map.fitBounds(multipolygon.getBounds());
            }
        });
    
        // Design layout features
        function onEachFeature(feature, layer) {
            
            layer.on({
                mouseover: highlightFeature,
                mouseout: resetHighlight,
                click: zoomToFeature
            });
        }
    
        function resetHighlight(e) {
            e.target.closePopup();
            district_boundary.resetStyle(e.target);
            info.update();
        }
    
        function zoomToFeature(e) {

            {% if is_mobile() == false %}
            	var whereToGo = "{{ url("city", {"insee": "XXX", "name": "YYY"}) }}";
            	{% for city in cities %}
            		if(e.target.feature.properties.insee == "{{ city.insee }}") {
                        whereToGo = whereToGo.replace("XXX", "{{ city.insee }}");
                        whereToGo = whereToGo.replace("YYY", "{{ city.nameForUrl }}");
            		}
            	{% endfor %}
                window.location.href = whereToGo;
            {% endif %}
        }
    
        function highlightFeature(e) {
            var layer = e.target;
    
            layer.setStyle({
                weight: 4,
                color: '#fff',
                dashArray: '',
                fillOpacity: 0.7
            });

            var textPopup = "";

            {% for city in cities %}
                if(e.target.feature.properties.insee == "{{ city.insee }}") {

                	textPopup = "<center>";
                	
                    {% if is_mobile() %}
                        var whereToGo = "{{ url("city", {"insee": "XXX", "name": "YYY"}) }}";
                    	{% for city in cities %}
                            whereToGo = whereToGo.replace("XXX", "{{ city.insee }}");
                            whereToGo = whereToGo.replace("YYY", "{{ city.nameForUrl }}");
                    	{% endfor %}
                    	textPopup += "<a href='"+whereToGo+"' style='{% if city.validatedLists|length > 0 %}color: #feb24c;{% endif %}'>";
                	{% endif %}
                	
                	textPopup += "<span style='{% if city.validatedLists|length > 0 %}color: #feb24c;{% endif %}'><h5>{{ city.name }}</h5>";

                	{% if city.validatedLists|length > 1 %}
                		textPopup += "{{ "nb_answers"|trans({"%nb%": city.validatedLists|length}) }}";
            		{% else %}
            			textPopup += "{{ "zero_one_answer"|trans({"%nb%": city.validatedLists|length}) }}";
                	{% endif %}

                	{% if is_mobile() %}
            			textPopup += "<br/><br/>{{ "map_hint_mobile"|trans }}";
            		{% else %}
                		textPopup += "<br/><br/>{{ "map_hint"|trans }}";
            		{% endif %}
                	textPopup += "</span>";

                	{% if is_mobile() %}
                		textPopup += "</a></center>";
            		{% endif %}
        		}
            {% endfor %}

            if(textPopup) {
                layer.bindPopup(textPopup);
                layer.openPopup();
            }
    
            if (!L.Browser.ie && !L.Browser.opera) {
                layer.bringToFront();
            }
    
            info.update(layer.feature.properties);
        }
    
        function style(feature) {
    
            return {
                fillColor: getColor(feature.properties.insee),
                weight: 1,
                opacity: 1,
                color: 'white',
                dashArray: '3',
                fillOpacity: 0.7
            };
        }
    
        function getColor(d) {

            {% for city in cities %}
            	
            	if(d == "{{ city.insee }}") {
                	{% if city.validatedLists|length > 0 %}
                		return "#feb24c";
                	{% endif %}
            	}
            {% endfor %}
    
    	    
        	
            return "#cccccc";
        }






    });
    </script>
{% endblock %}